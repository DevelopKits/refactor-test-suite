diff --git a/RefactorTest/RenameCpp11.cpp b/RefactorTest/RenameCpp11.cpp
index a2ae8c8..7b4f63d 100644
--- a/RefactorTest/RenameCpp11.cpp
+++ b/RefactorTest/RenameCpp11.cpp
@@ -909,12 +909,12 @@ void f30()
 void f31()
 {
     // #TEST#: R371 Rename Extern
-    using RenameCpp11::Extern;
+    using RenameCpp11::Goink;
     // #TEST#: R372 Rename Extern
-    Extern<int> x(10);
+    Goink<int> x(10);
     require_equal(10, x.t);
     // #TEST#: R373 Rename Extern
-    Extern<std::string> y("hello world!");
+    Goink<std::string> y("hello world!");
     require_equal(std::string{"hello world!"}, y.t);
 }
 
@@ -924,9 +924,9 @@ namespace RenameCpp11
 {
 
 // #TEST#: R374 Rename Extern
-template struct Extern<int>;
+template struct Goink<int>;
 // #TEST#: R375 Rename Extern
-template struct Extern<std::string>;
+template struct Goink<std::string>;
 
 }
 
diff --git a/RefactorTest/RenameCpp11.h b/RefactorTest/RenameCpp11.h
index 481f212..b408735 100644
--- a/RefactorTest/RenameCpp11.h
+++ b/RefactorTest/RenameCpp11.h
@@ -8,19 +8,19 @@ namespace RenameCpp11
 // #TEST#: R376 Rename T
 template <typename T>
 // #TEST#: R377 Rename Extern
-struct Extern
+struct Goink
 {
     // #TEST#: R378 Rename Extern
-    Extern() {}
+    Goink() {}
     // #TEST#: R379 Rename Extern
-    Extern(T t) : t(t) {}
+    Goink(T t) : t(t) {}
     T t = T();
 };
 
 // #TEST#: R380 Rename Extern
-extern template struct Extern<int>;
+extern template struct Goink<int>;
 // #TEST#: R381 Rename Extern
-extern template struct Extern<std::string>;
+extern template struct Goink<std::string>;
 
 }
 
